{"questions":[{"type":"multi","id":1,"question":"Which of these best describes an array?","img":"","options":["A data structure that shows a hierarchical behavior","Container of objects of similar types","Container of objects of mixed types","All of the mentioned"],"answer":"A data structure that shows a hierarchical behavior","code":""},{"type":"multi","id":2,"question":"How do you initialize an array in C?","img":"","options":["int arr[3] = (1,2,3);","int arr(3) = {1,2,3};","int arr[3] = {1,2,3};","int arr(3) = (1,2,3);"],"answer":"int arr[3] = {1,2,3};","code":""},{"type":"multi","id":3,"question":"Which of the following is a correct way to declare a multidimensional array in Java?","img":"","options":["int[][] arr;","int arr[][];","int []arr[];","All of the mentioned"],"answer":"All of the mentioned","code":""},{"type":"multi","id":4,"question":"What are the advantages of arrays?","img":"","options":["We must know before hand how many elements will be there in the array","There are chances of wastage of memory space if elements inserted in an array are lesser than than the allocated size","Insertion and deletion becomes tedious","All of the mentioned"],"answer":"All of the mentioned","code":""},{"type":"multi","id":5,"question":"Assuming int is of 4bytes, what is the size of int arr[15];?","img":"","options":["15","19","11","60"],"answer":"60","code":""},{"type":"multi","id":6,"question":"A linear collection of data elements where the linear node is given by means of pointer is called?","img":"","options":["Linked list"," Node list","Primitive list","None of the mentioned"],"answer":"Linked list","code":""},{"type":"multi","id":7,"question":"In linked list each node contain minimum of two fields. One field is data field to store the data second field is?","img":"","options":["Pointer to character","Pointer to iteger","Pointer to node","Node"],"answer":"Pointer to node","code":""},{"type":"multi","id":8,"question":"Which of the following c code is used to create new node?","img":"","options":["ptr = (NODE*)malloc(sizeof(NODE));","ptr = (NODE*)malloc(NODE);","ptr = (NODE*)malloc(sizeof(NODE*));","ptr = (NODE)malloc(sizeof(NODE));"],"answer":"ptr = (NODE*)malloc(sizeof(NODE));","code":"struct node\r\n{\r\n    int data;\r\n    struct node * next;\r\n}\r\ntypedef struct node NODE;\r\nNODE *ptr;"},{"type":"multi","id":9,"question":"What kind of linked list is best to answer question like �What is the item at position n?�","img":"","options":["Singly linked list","Doubly linked list","Circular linked list","Array implementation of linked list"],"answer":"Array implementation of linked list","code":""},{"type":"multi","id":10,"question":"Linked lists are not suitable to for the implementation of?","img":"","options":["Insertion sort","Radix sort","Polynomial manipulation","Binary search"],"answer":"Binary search","code":""},{"type":"multi","id":11,"question":"Linked list is considered as an example of ___________ type of memory allocation.","img":"","options":["Dynamic","Static","Compile time","None of the mentioned"],"answer":"Dynamic","code":""},{"type":"multi","id":12,"question":"In Linked List implementation, a node carries information regarding","img":"","options":["Data","Link","Data and Link","None of the mentioned"],"answer":"Link","code":""},{"type":"multi","id":13,"question":"Linked list data structure offers considerable saving in","img":"","options":["Computational Time","Space Utilization","Space Utilization and Computational Time"," None of the mentioned"],"answer":"Space Utilization and Computational Time","code":""},{"type":"multi","id":14,"question":"What does the following function do for a given Linked List with first node as head?","img":"","options":["Prints all nodes of linked lists","Prints all nodes of linked list in reverse order","Prints alternate nodes of Linked List","Prints alternate nodes in reverse order"],"answer":"Prints all nodes of linked list in reverse order","code":"void fun1(struct node* head)\r\n{\r\n    if(head == NULL)\r\n    return;\r\n    fun1(head->next);\r\n    printf(\"%d  \", head->data);\r\n}"},{"type":"multi","id":15,"question":"What is the output of following function for start pointing to first node of following linked list?","img":"","options":["1 4 6 6 4 1","1 3 5 1 3 5","1 2 3 5","1 3 5 5 3 1"],"answer":"1 3 5 5 3 1","code":"1->2->3->4->5->6\r\nvoid fun(struct node* start)\r\n{\r\n    if(start == NULL)\r\n    return;\r\n    printf(\"%d  \", start->data); \r\n    if(start->next != NULL )\r\n    fun(start->next->next);\r\n    printf(\"%d  \", start->data);\r\n}"},{"type":"multi","id":16,"question":"You are given pointers to first and last nodes of a singly linked list, which of the following operations are dependent on the length of the linked list?","img":"","options":["Delete the first element","Insert a new element as a first element","Delete the last element of the list","Add a new element at the end of the list"],"answer":"Delete the last element of the list","code":""},{"type":"multi","id":17,"question":"Process of inserting an element in stack is called ____________","img":"","options":["Create","Push","Evaluation","Pop"],"answer":"Push","code":""},{"type":"multi","id":18,"question":"Process of removing an element from stack is called __________","img":"","options":["Create","Push","Evaluation","Pop"],"answer":"Pop","code":""},{"type":"multi","id":19,"question":"Pushing an element into stack already having five elements and stack size of 5 , then stack becomes","img":"","options":["Overflow","Crash","Underflow","User flow"],"answer":"Overflow","code":""},{"type":"multi","id":20,"question":"Which of the following applications may use a stack?","img":"","options":["A parentheses balancing program","Tracking of local variables at run time","Compiler Syntax Analyzer","Compiler Syntax Analyzer"],"answer":"Compiler Syntax Analyzer","code":""},{"type":"multi","id":21,"question":"Entries in a stack are �ordered�. What is the meaning of this statement?","img":"","options":["A collection of stacks is sortable","Stack entries may be compared with the �<� operation","The entries are stored in a linked list","There is a Sequential entry that is one by one"],"answer":"There is a Sequential entry that is one by one","code":""},{"type":"multi","id":22,"question":"What is the value of the postfix expression 6 3 2 4 + � *:","img":"","options":["Something between -5 and -15","Something between 5 and -5","Something between 5 and 15","Something between 15 and 100"],"answer":"Something between 15 and 100","code":""},{"type":"multi","id":23,"question":"Here is an infix expression: 4 + 3*(6*3-12). Suppose that we are using the usual stack algorithm to convert the expression from infix to postfix notation. The maximum number of symbols that will appear on the stack AT ONE TIME during the conversion of this expression?","img":"","options":["1","2","3","4"],"answer":"4","code":""},{"type":"multi","id":24,"question":"The postfix form of the expression (A+ B)*(C*D- E)*F / G is?","img":"","options":["AB+ CD*E � FG /**","AB + CD* E � F **G /","AB + CD* E � *F *G /","AB + CDE * � * F *G /"],"answer":"AB+ CD*E � FG /**","code":""},{"type":"multi","id":25,"question":"The postfix form of A*B+C/D is?","img":"","options":["*AB/CD+","AB*CD/+","A*BC+/D","ABCD+/*"],"answer":"AB*CD/+","code":""},{"type":"multi","id":26,"question":"Which data structure is needed to convert infix notation to postfix notation?","img":"","options":["Branch","Tree","Queue","Stack"],"answer":"Stack","code":""},{"type":"multi","id":27,"question":"Which data structure is used for implementing recursion?","img":"","options":["Queue","Stack","Array","List"],"answer":"Stack","code":""},{"type":"multi","id":28,"question":"Convert the following Infix expression to Postfix form using a stack x + y * z + (p * q + r) * s, Follow usual precedence rule and assume that the expression is legal.","img":"","options":["xyz*+pq*r+s*+","xyz*+pq*r+s+*","xyz+*pq*r+s*+","None of the mentioned"],"answer":"xyz*+pq*r+s*+","code":""},{"type":"multi","id":29,"question":"Consider the following operation performed on a stack of size 5.After the completion of all operation, the number of elements present in stack are","img":"","options":["1","2","3","4"],"answer":"1","code":"Push(1);\r\nPop();\r\nPush(2);\r\nPush(3);\r\nPop();\r\nPush(4);\r\nPop();\r\nPop();\r\nPush(5);"},{"type":"multi","id":30,"question":"The type of expression in which operator succeeds its operands is?","img":"","options":["Infix Expression","Prefix Expression","Postfix Expression","None of the mentioned"],"answer":"Postfix Expression","code":""},{"type":"multi","id":31,"question":"If the elements �A�, �B�, �C� and �D� are placed in a stack and are deleted one at a time, what is the order of removal?","img":"","options":["ABCD","DCBA","DCAB","ABDC"],"answer":"DCBA","code":""},{"type":"multi","id":32,"question":"Which of the following is false about a doubly linked list?","img":"","options":["We can navigate in both the directions","It requires more space than a singly linked list","The insertion and deletion of a node take a bit longer","None of the mentioned"],"answer":"None of the mentioned","code":""},{"type":"multi","id":33,"question":"What is a memory efficient double linked list?","img":"","options":[" Each node has only one pointer to traverse the list back and forth","The list has breakpoints for faster traversal","An auxiliary singly linked list acts as a helper list to traverse through the doubly linked list","None of the mentioned"],"answer":" Each node has only one pointer to traverse the list back and forth","code":""},{"type":"multi","id":34,"question":"How do you calculate the pointer difference in a memory efficient double linked list?","img":"","options":["head xor tail","pointer to previous node or pointer to next node","pointer to previous node � pointer to next node","pointer to next node � pointer to previous node"],"answer":"pointer to previous node or pointer to next node","code":""},{"type":"multi","id":35,"question":"Consider the following doubly linked list: head-1-2-3-4-5-tail What will be the list after performing the given sequence of operations?","img":"","options":["head-0-1-2-3-4-5-6-tail","head-1-2-3-4-5-6-tail","head-6-1-2-3-4-5-0-tail","head-0-1-2-3-4-5-tail"],"answer":"head-6-1-2-3-4-5-0-tail","code":"\tNode temp = new Node(6,head,head.getNext());\r\n\tNode temp1 = new Node(0,tail.getPrev(),tail);\r\n\thead.setNext(temp);\r\n\ttemp.getNext().setPrev(temp);\r\n\ttail.setPrev(temp1);\r\n\ttemp1.getPrev().setNext(temp1);"},{"type":"multi","id":36,"question":"Consider the following doubly linked list: head-1-2-3-4-5-tail What will be the list after performing the given sequence of operations?","img":"","options":["head-6-1-2-3-4-5-tail","head-6-1-2-3-4-tail","head-1-2-3-4-5-6-tail","head-1-2-3-4-5-tail"],"answer":"head-6-1-2-3-4-tail","code":"Node temp = new Node(6,head,head.getNext());\r\n\thead.setNext(temp);\r\n\ttemp.getNext().setPrev(temp);\r\n\tNode temp1 = tail.getPrev();\r\n\ttail.setPrev(temp1.getPrev());\r\n\ttemp1.getPrev().setNext(tail);"},{"type":"multi","id":37,"question":"What differentiates a circular linked list from a normal linked list?","img":"","options":["You cannot have the �next� pointer point to null in a circular linked list","It is faster to traverse the circular linked list","You may or may not have the �next� pointer point to null in a circular linked list","All of the mentioned"],"answer":"You may or may not have the �next� pointer point to null in a circular linked list","code":""},{"type":"multi","id":38,"question":"Which of the following application makes use of a circular linked list?","img":"","options":["Undo operation in a text editor","Recursive function calls","Allocating CPU to resources","All of the mentioned"],"answer":"Allocating CPU to resources","code":""},{"type":"multi","id":39,"question":"Which of the following is false about a circular linked list?","img":"","options":["Every node has a successor","Time complexity of inserting a new node at the head of the list is O(1)","Time complexity for deleting the last node is O(n)","None of the mentioned"],"answer":"Time complexity of inserting a new node at the head of the list is O(1)","code":""},{"type":"multi","id":40,"question":"Consider a small circular linked list. How to detect the presence of cycles in this list effectively?","img":"","options":["Keep one node as head and traverse another temp node till the end to check if its �next points to head","Have fast and slow pointers with the fast pointer advancing two nodes at a time and slow pointer advancing by one node at a time","Cannot determine, you have to pre-define if the list contains cycles","None of the mentioned"],"answer":"Have fast and slow pointers with the fast pointer advancing two nodes at a time and slow pointer advancing by one node at a time","code":""},{"type":"multi","id":41,"question":"Which of the following real world scenarios would you associate with a stack data structure?","img":"","options":["piling up of chairs one above the other","people standing in a line to be serviced at a counter","offer services based on the priority of the customer","all of the mentioned"],"answer":"piling up of chairs one above the other","code":""},{"type":"multi","id":42,"question":"Which of the following array position will be occupied by a new element being pushed for a stack of size N elements(capacity of stack > N).","img":"","options":["S[N-1].","S[N].","S[1].","S[0]."],"answer":"S[N].","code":""},{"type":"multi","id":43,"question":"Which of the following properties is associated with a queue?","img":"","options":["First In Last Out","First In First Out","Last In First Out","None of the mentioned"],"answer":"First In First Out","code":""},{"type":"multi","id":44,"question":"In a circular queue, how do you increment the rear end of the queue?","img":"","options":["rear++","(rear+1) % CAPACITY","(rear % CAPACITY)+1","rear�"],"answer":"(rear+1) % CAPACITY","code":""},{"type":"multi","id":45,"question":"What is the need for a circular queue?","img":"","options":["effective usage of memory","easier computations","all of the mentioned","none of the mentioned"],"answer":"effective usage of memory","code":""},{"type":"multi","id":46,"question":"In linked list implementation of a queue, where does a new element be inserted?","img":"","options":["At the head of link list","At the centre position in the link list","At the tail of the link list","None of the mentioned"],"answer":"At the tail of the link list","code":""},{"type":"multi","id":47,"question":"In linked list implementation of a queue, front and rear pointers are tracked. Which of these pointers will change during an insertion into a NONEMPTY queue?","img":"","options":["Only front pointer","Only rear pointer","Both front and rear pointer","None of the mentioned"],"answer":"Only rear pointer","code":""},{"type":"multi","id":48,"question":"The essential condition which is checked before insertion in a linked queue is?","img":"","options":["Underflow","Overflow","Front value","Rear value"],"answer":"Overflow","code":""},{"type":"multi","id":49,"question":"Which of the following is true about linked list implementation of queue?","img":"","options":["In push operation, if new nodes are inserted at the beginning of linked list, then in pop operation, nodes must be removed from end","In push operation, if new nodes are inserted at the beginning, then in pop operation, nodes must be removed from the beginning","In push operation, if new nodes are inserted at the end, then in pop operation, nodes must be removed from end","None of the mentioned"],"answer":"In push operation, if new nodes are inserted at the beginning of linked list, then in pop operation, nodes must be removed from end","code":""},{"type":"multi","id":50,"question":"What is a dequeue?","img":"","options":["A queue with insert/delete defined for both front and rear ends of the queue","A queue implemented with a doubly linked list","A queue implemented with both singly and doubly linked lists","None of the mentioned"],"answer":"A queue with insert/delete defined for both front and rear ends of the queue","code":""},{"type":"multi","id":51,"question":"The operations that needed to be performed are (You can perform only push and pop):","img":"","options":["Push(pop()), push(6), push(pop())","Push(pop()), push(6)","Push(pop()), push(pop()), push(6)","Push(6)"],"answer":"Push(pop()), push(6), push(pop())","code":"Consider you have a stack whose elements in it are as follows.\r\n5 4 3 2 << top\r\nWhere the top element is 2.\r\nYou need to get the following stack\r\n6 5 4 3 2 << top"},{"type":"multi","id":52,"question":"You have two jars, one jar which has 10 rings and the other has none. They are placed one above the other. You want to remove the last ring in the jar. And the second jar is weak and cannot be used to store rings for a long time.","img":"","options":["Empty the first jar by removing it one by one from the first jar and placing it into the second jar Apresentas frioleiras artificial era nao observador uns ostentacao encostados. Bem moem dou afim meu quer esta jura isso paz. Ma allumiada predomina ameacador costumada pe. Sabia claro demos certo faz vou podes alcou. Loucos hombro no ha tu motiva tu justos acabar. Das mereca detras leilao tem cravae namoro via docura. Por manifestar viu apresentas conquistar elleporque imprimiram manifestou. ","Empty the first jar by removing it one by one from the first jar and placing it into the second jar and empty the second jar by placing all the rings into the first jar one by one Apresentas frioleiras artificial era nao observador uns ostentacao encostados. Bem moem dou afim meu quer esta jura isso paz. Ma allumiada predomina ameacador costumada pe. Sabia claro demos certo faz vou podes alcou. Loucos hombro no ha tu motiva tu justos acabar. Das mereca detras leilao tem cravae namoro via docura. Por manifestar viu apresentas conquistar elleporque imprimiram manifestou. ","There exists no possible way to do this Apresentas frioleiras artificial era nao observador uns ostentacao encostados. Bem moem dou afim meu quer esta jura isso paz. Ma allumiada predomina ameacador costumada pe. Sabia claro demos certo faz vou podes alcou. Loucos hombro no ha tu motiva tu justos acabar. Das mereca detras leilao tem cravae namoro via docura. Por manifestar viu apresentas conquistar elleporque imprimiram manifestou. ","Break the jar and remove the last one Apresentas frioleiras artificial era nao observador uns ostentacao encostados. Bem moem dou afim meu quer esta jura isso paz. Ma allumiada predomina ameacador costumada pe. Sabia claro demos certo faz vou podes alcou. Loucos hombro no ha tu motiva tu justos acabar. Das mereca detras leilao tem cravae namoro via docura. Por manifestar viu apresentas conquistar elleporque imprimiram manifestou. "],"answer":"Empty the first jar by removing it one by one from the first jar and placing it into the second jar and empty the second jar by placing all the rings into the first jar one by one","code":""},{"type":"multi","id":53,"question":"A data structure in which elements can be inserted or deleted at/from both the ends but not in the middle is?","img":"","options":["Queue","Circular queue","Dequeue","Priority queue"],"answer":"Dequeue","code":""},{"type":"multi","id":54,"question":"A normal queue, if implemented using an array of size MAX_SIZE, gets full when","img":"","options":["Rear = MAX_SIZE - 1","Front = (rear + 1)mod MAX_SIZE","Front = rear + 1","Rear = front"],"answer":"Rear = MAX_SIZE - 1","code":""},{"type":"multi","id":55,"question":"Which of the following statements are correct with respect to Singly Linked List(SLL) and Doubly Linked List(DLL)?","img":"","options":["Complexity of Insertion and Deletion at known position is O(n) in SLL and O(1) in DLL","SLL uses lesser memory per node than DLL","DLL has more searching power than SLL","All of the mentioned"],"answer":"All of the mentioned","code":""},{"type":"multi","id":56,"question":"Consider these functions:","img":"","options":["20","4","stack underflow","5"],"answer":"5","code":"push() : push an element into the stack\r\npop() : pop the top-of-the-stack element\r\ntop() : returns the item stored in top-of-the-stack-node\r\nWhat will be the output after performing these sequence of operations\r\npush(20);\r\npush(4);\r\ntop();\r\npop();\r\npop();\r\npop();\r\npush(5);\r\ntop();"},{"type":"multi","id":57,"question":"Minimum number of queues to implement stack is ___________","img":"","options":["3","4","1","2"],"answer":"1","code":""},{"type":"multi","id":58,"question":"Given pointer to a node X in a singly linked list. Only one pointer is given, pointer to head node is not given, can we delete the node X from given linked list?","img":"","options":["Possible if X is not last node","Possible if size of linked list is even","Possible if size of linked list is odd","Possible if X is not first node"],"answer":"Possible if X is not last node","code":""},{"type":"multi","id":59,"question":"You are given pointers to first and last nodes of a singly linked list, which of the following operations are dependent on the length of the linked list?","img":"","options":["Delete the first element","Insert a new element as a first element","Delete the last element of the list","Add a new element at the end of the list"],"answer":"Delete the last element of the list","code":""},{"type":"multi","question":"The data structure required for BFS on a graph is ? ","options":["Stack","Queue","Linked list","None of the above"],"answer":"Queue","code":"","id":60}]}