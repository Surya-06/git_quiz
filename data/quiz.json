{"questions":[{"type":"multi","id":1,"question":"What are the advantages of arrays?","img":"","options":["We must know before hand how many elements will be there in the array","There are chances of wastage of memory space if elements inserted in an array are lesser than than the allocated size","Insertion and deletion becomes tedious","All of the mentioned"],"answer":"All of the mentioned","code":""},{"type":"multi","id":2,"question":"Assuming int is of 4bytes, what is the size of int arr[15];?","img":"","options":["15","19","11","60"],"answer":"60","code":""},{"type":"multi","id":3,"question":"Which of the following c code is used to create new node?","img":"","options":["ptr = (NODE*)malloc(sizeof(NODE));","ptr = (NODE*)malloc(NODE);","ptr = (NODE*)malloc(sizeof(NODE*));","ptr = (NODE)malloc(sizeof(NODE));"],"answer":"ptr = (NODE*)malloc(sizeof(NODE));","code":"struct node\r\n{\r\n    int data;\r\n    struct node * next;\r\n}\r\ntypedef struct node NODE;\r\nNODE *ptr;"},{"type":"multi","id":4,"question":"Linked list is considered as an example of ___________ type of memory allocation.","img":"","options":["Dynamic","Static","Compile time","None of the mentioned"],"answer":"Dynamic","code":""},{"type":"multi","id":5,"question":"In Linked List implementation, a node carries information regarding","img":"","options":["Data","Link","Data and Link","None of the mentioned"],"answer":"Link","code":""},{"type":"multi","id":6,"question":"Linked list data structure offers considerable saving in","img":"","options":["Computational Time","Space Utilization","Space Utilization and Computational Time"," None of the mentioned"],"answer":"Space Utilization and Computational Time","code":""},{"type":"multi","id":7,"question":"What does the following function do for a given Linked List with first node as head?","img":"","options":["Prints all nodes of linked lists","Prints all nodes of linked list in reverse order","Prints alternate nodes of Linked List","Prints alternate nodes in reverse order"],"answer":"Prints all nodes of linked list in reverse order","code":"void fun1(struct node* head)\r\n{\r\n    if(head == NULL)\r\n    return;\r\n    fun1(head->next);\r\n    printf(\"%d  \", head->data);\r\n}"},{"type":"multi","id":8,"question":"What is the output of following function for start pointing to first node of following linked list?","img":"","options":["1 4 6 6 4 1","1 3 5 1 3 5","1 2 3 5","1 3 5 5 3 1"],"answer":"1 3 5 5 3 1","code":"1->2->3->4->5->6\r\nvoid fun(struct node* start)\r\n{\r\n    if(start == NULL)\r\n    return;\r\n    printf(\"%d  \", start->data); \r\n    if(start->next != NULL )\r\n    fun(start->next->next);\r\n    printf(\"%d  \", start->data);\r\n}"},{"type":"multi","id":9,"question":"The postfix form of A*B+C/D is?","img":"","options":["*AB/CD+","AB*CD/+","A*BC+/D","ABCD+/*"],"answer":"AB*CD/+","code":""},{"type":"multi","id":10,"question":"Which data structure is used for implementing recursion?","img":"","options":["Queue","Stack","Array","List"],"answer":"Stack","code":""},{"type":"multi","id":11,"question":"Convert the following Infix expression to Postfix form using a stack x + y * z + (p * q + r) * s, Follow usual precedence rule and assume that the expression is legal.","img":"","options":["xyz*+pq*r+s*+","xyz*+pq*r+s+*","xyz+*pq*r+s*+","None of the mentioned"],"answer":"xyz*+pq*r+s*+","code":""},{"type":"multi","id":12,"question":"Consider the following operation performed on a stack of size 5.After the completion of all operation, the number of elements present in stack are","img":"","options":["1","2","3","4"],"answer":"1","code":"Push(1);\r\nPop();\r\nPush(2);\r\nPush(3);\r\nPop();\r\nPush(4);\r\nPop();\r\nPop();\r\nPush(5);"},{"type":"multi","id":13,"question":"If the elements �A�, �B�, �C� and �D� are placed in a stack and are deleted one at a time, what is the order of removal?","img":"","options":["ABCD","DCBA","DCAB","ABDC"],"answer":"DCBA","code":""},{"type":"multi","id":14,"question":"Which of the following is false about a doubly linked list?","img":"","options":["We can navigate in both the directions","It requires more space than a singly linked list","The insertion and deletion of a node take a bit longer","None of the mentioned"],"answer":"None of the mentioned","code":""},{"type":"multi","id":15,"question":"How do you calculate the pointer difference in a memory efficient double linked list?","img":"","options":["head xor tail","pointer to previous node or pointer to next node","pointer to previous node � pointer to next node","pointer to next node � pointer to previous node"],"answer":"pointer to previous node or pointer to next node","code":""},{"type":"multi","id":16,"question":"Which of the following application makes use of a circular linked list?","img":"","options":["Undo operation in a text editor","Recursive function calls","Allocating CPU to resources","All of the mentioned"],"answer":"Allocating CPU to resources","code":""},{"type":"multi","id":17,"question":"Which of the following is false about a circular linked list?","img":"","options":["Every node has a successor","Time complexity of inserting a new node at the head of the list is O(1)","Time complexity for deleting the last node is O(n)","None of the mentioned"],"answer":"Time complexity of inserting a new node at the head of the list is O(1)","code":""},{"type":"multi","id":18,"question":"Consider a small circular linked list. How to detect the presence of cycles in this list effectively?","img":"","options":["Keep one node as head and traverse another temp node till the end to check if its �next points to head","Have fast and slow pointers with the fast pointer advancing two nodes at a time and slow pointer advancing by one node at a time","Cannot determine, you have to pre-define if the list contains cycles","None of the mentioned"],"answer":"Have fast and slow pointers with the fast pointer advancing two nodes at a time and slow pointer advancing by one node at a time","code":""},{"type":"multi","id":19,"question":"Which of the following array position will be occupied by a new element being pushed for a stack of size N elements(capacity of stack > N).","img":"","options":["S[N-1].","S[N].","S[1].","S[0]."],"answer":"S[N].","code":""},{"type":"multi","id":20,"question":"Which of the following properties is associated with a queue?","img":"","options":["First In Last Out","First In First Out","Last In First Out","None of the mentioned"],"answer":"First In First Out","code":""},{"type":"multi","id":21,"question":"In a circular queue, how do you increment the rear end of the queue?","img":"","options":["rear++","(rear+1) % CAPACITY","(rear % CAPACITY)+1","rear--"],"answer":"(rear+1) % CAPACITY","code":""},{"type":"multi","id":22,"question":"What is the need for a circular queue?","img":"","options":["effective usage of memory","easier computations","all of the mentioned","none of the mentioned"],"answer":"effective usage of memory","code":""},{"type":"multi","id":23,"question":"You have two jars, one jar which has 10 rings and the other has none. They are placed one above the other. You want to remove the last ring in the jar. And the second jar is weak and cannot be used to store rings for a long time.","img":"","options":["Empty the first jar by removing it one by one from the first jar and placing it into the second jar Apresentas frioleiras artificial era nao observador uns ostentacao encostados. Bem moem dou afim meu quer esta jura isso paz. Ma allumiada predomina ameacador costumada pe. Sabia claro demos certo faz vou podes alcou. Loucos hombro no ha tu motiva tu justos acabar. Das mereca detras leilao tem cravae namoro via docura. Por manifestar viu apresentas conquistar elleporque imprimiram manifestou. ","Empty the first jar by removing it one by one from the first jar and placing it into the second jar and empty the second jar by placing all the rings into the first jar one by one Apresentas frioleiras artificial era nao observador uns ostentacao encostados. Bem moem dou afim meu quer esta jura isso paz. Ma allumiada predomina ameacador costumada pe. Sabia claro demos certo faz vou podes alcou. Loucos hombro no ha tu motiva tu justos acabar. Das mereca detras leilao tem cravae namoro via docura. Por manifestar viu apresentas conquistar elleporque imprimiram manifestou. ","There exists no possible way to do this Apresentas frioleiras artificial era nao observador uns ostentacao encostados. Bem moem dou afim meu quer esta jura isso paz. Ma allumiada predomina ameacador costumada pe. Sabia claro demos certo faz vou podes alcou. Loucos hombro no ha tu motiva tu justos acabar. Das mereca detras leilao tem cravae namoro via docura. Por manifestar viu apresentas conquistar elleporque imprimiram manifestou. ","Break the jar and remove the last one Apresentas frioleiras artificial era nao observador uns ostentacao encostados. Bem moem dou afim meu quer esta jura isso paz. Ma allumiada predomina ameacador costumada pe. Sabia claro demos certo faz vou podes alcou. Loucos hombro no ha tu motiva tu justos acabar. Das mereca detras leilao tem cravae namoro via docura. Por manifestar viu apresentas conquistar elleporque imprimiram manifestou. "],"answer":"Empty the first jar by removing it one by one from the first jar and placing it into the second jar and empty the second jar by placing all the rings into the first jar one by one","code":""},{"type":"multi","id":24,"question":"A data structure in which elements can be inserted or deleted at/from both the ends but not in the middle is?","img":"","options":["Queue","Circular queue","Dequeue","Priority queue"],"answer":"Dequeue","code":""},{"type":"multi","id":25,"question":"A normal queue, if implemented using an array of size MAX_SIZE, gets full when","img":"","options":["Rear = MAX_SIZE - 1","Front = (rear + 1)mod MAX_SIZE","Front = rear + 1","Rear = front"],"answer":"Rear = MAX_SIZE - 1","code":""},{"type":"multi","id":26,"question":"Which of the following statements are correct with respect to Singly Linked List(SLL) and Doubly Linked List(DLL)?","img":"","options":["Complexity of Insertion and Deletion at known position is O(n) in SLL and O(1) in DLL","SLL uses lesser memory per node than DLL","DLL has more searching power than SLL","All of the mentioned"],"answer":"All of the mentioned","code":""},{"type":"multi","id":27,"question":"Minimum number of queues to implement stack is ___________","img":"","options":["3","4","1","2"],"answer":"1","code":""},{"type":"multi","id":28,"question":"Given pointer to a node X in a singly linked list. Only one pointer is given, pointer to head node is not given, can we delete the node X from given linked list?","img":"","options":["Possible if X is not last node","Possible if size of linked list is even","Possible if size of linked list is odd","Possible if X is not first node"],"answer":"Possible if X is not last node","code":""},{"type":"multi","id":29,"question":"You are given pointers to first and last nodes of a singly linked list, which of the following operations are dependent on the length of the linked list?","img":"","options":["Delete the first element","Insert a new element as a first element","Delete the last element of the list","Add a new element at the end of the list"],"answer":"Delete the last element of the list","code":""},{"type":"multi","id":30,"question":"The data structure required for BFS on a graph is ? ","img":"","options":["Stack","Queue","Linked list","None of the above"],"answer":"Queue","code":""}]}